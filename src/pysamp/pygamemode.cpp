#include "pygamemode.h"


std::string PyGamemode::getCWD()
{
	// 4096!? See https://eklitzke.org/path-max-is-tricky
	char buf[4096];
	return(
		GETCWD(buf, sizeof(buf))
		? std::string(buf)
		: std::string("")
	);
}

PyGamemode::PyGamemode(CallbacksManager* callbacks)
:
	callbacks(callbacks),
	_save(nullptr)
{
	if(PyImport_AppendInittab("samp", &PyInit_samp) == -1)
	{
		sampgdk::logprintf(
			"Adding samp module to Python interpreter failed."
		);
		return;
	}

	Py_InitializeEx(0);

	PyObject* syspath = PySys_GetObject("path");

	if(!syspath)
	{
		sampgdk::logprintf("Getting Python sys.path object failed.");
		return;
	}

	PyObject* str_cwd = PyUnicode_FromString(getCWD().c_str());
	PyList_Append(syspath, str_cwd);
	Py_DECREF(str_cwd);

	PyObject* pysamp_module = PyImport_ImportModule("samp");

	if(!pysamp_module)
	{
		sampgdk::logprintf("Couldn't import samp module:");
		PyErr_Print();
		return;
	}

	for(
		auto item = PyGamemode::constants.begin();
		item != PyGamemode::constants.end();
		++item
	)
	{
		if(
			PyObject_SetAttrString(
				pysamp_module,
				item->first.c_str(),
				Py_BuildValue("i", item->second)
			) == -1
		)
		{
			sampgdk::logprintf("Couldn't set constants on samp module:");
			PyErr_Print();
			return;
		}
	}

	this->config = {
		{"encoding", Py_BuildValue("s", "cp1252")}
	};

	Py_UNBLOCK_THREADS
}

PyGamemode::~PyGamemode()
{
	Py_BLOCK_THREADS

	for(const auto item : this->config)
		Py_DECREF(item.second);

	PyGamemode::unload();
	Py_FinalizeEx();
}

void PyGamemode::load()
{
	PySAMP::GIL gil;

	PyObject* name = PyUnicode_FromString("python");
	this->module = PyImport_Import(name);
	Py_DECREF(name);

	if(this->module == NULL)
	{
		sampgdk::logprintf("PyGamemode::load() failed:");
		PyErr_Print();
		return;
	}

	loaded = true;
	disabled = false;
}

void PyGamemode::reload()
{
	PySAMP::GIL gil;

	if(this->module)
	{
		PyObject* new_module = PyImport_ReloadModule(this->module);

		if(new_module == nullptr)
		{
			sampgdk::logprintf("PyGamemode::reload() failed:");
			PyErr_Print();
		}
		else
		{
			Py_DECREF(this->module);
			Py_INCREF(new_module);
			this->module = new_module;
			disabled = false;
		}
	}
}

void PyGamemode::unload()
{
	PySAMP::GIL gil;
	Py_XDECREF(this->module);
	loaded = false;
	disabled = true;
}

void PyGamemode::disable()
{
	disabled = true;
}

bool PyGamemode::isLoaded()
{
	return PyGamemode::loaded;
}

bool PyGamemode::isEnabled()
{
	return PyGamemode::isLoaded() && !PyGamemode::disabled;
}

PyObject* PyGamemode::pyConfig(PyObject *self, PyObject *args, PyObject *kwargs)
{
	PySAMP::GIL gil;

	if(PyTuple_Size(args) != 0)
	{
		PyErr_SetString(
			PyExc_ValueError,
			"config() does not take any positional argument"
		);
		return NULL;
	}

	if(kwargs == NULL)
	{
		PyObject* return_value = PyDict_New();

		for(auto item : this->config)
			PyDict_SetItemString(return_value, item.first.c_str(), item.second);

		return return_value;
	}

	PyObject* items = PyDict_Items(kwargs);

	for(int i = 0; i < PyList_Size(items); ++i)
	{
		PyObject* item = PyList_GetItem(items, i);
		const char *key_name = PyUnicode_AsUTF8(PyTuple_GetItem(item, 0));

		if(this->config.count(key_name) < 1)
		{
			PyErr_Format(
				PyExc_ValueError,
				"config() key %s does not exist",
				key_name
			);
			Py_DECREF(items);
			return NULL;
		}

		this->config[key_name] = PyTuple_GetItem(item, 1);
	}

	Py_DECREF(items);
	Py_RETURN_NONE;
}

int PyGamemode::callback(
	const std::string name,
	PyObject* pArgs,
	cell* retval,
	bool* stop
)
{
	int ret = -1;  // -1 == !badRet, 0/1 are user-specified
	const int badRet = this->callbacks->getBadret(name);

	if(
		disabled
		|| this->module == nullptr
	)
		return !badRet;

	PySAMP::GIL gil;

	if(!PyObject_HasAttrString(this->module, name.c_str()))
		return !badRet;

	PyObject* pFunc = PyObject_GetAttrString(this->module, name.c_str());

	Py_XINCREF(pFunc);
	Py_XINCREF(pArgs);

	if(pFunc && PyCallable_Check(pFunc))
	{
		PyObject* pValue = PyObject_CallObject(pFunc, pArgs);

		if(PyErr_Occurred())
		{
			PyErr_Print();
			ret = !badRet;
			pValue = Py_None;
		}

		if(pValue != Py_None)
		{
			ret = PyObject_IsTrue(pValue);

			if(ret == -1)
			{
				PyErr_Print();
				ret = !badRet;
			}
		}

		Py_XDECREF(pValue);
	}

	Py_XDECREF(pFunc);
	Py_XDECREF(pArgs);

	if(ret == -1)
		ret = !badRet;

	if(retval != NULL)
		*retval = ret;

	if(
		stop != NULL
		&& ret == badRet
	)
		*stop = true;

	return ret;
}

const std::unordered_map<std::string, int> PyGamemode::constants = {
	{"MAX_PLAYER_NAME", MAX_PLAYER_NAME},
	{"MAX_CLIENT_MESSAGE", MAX_CLIENT_MESSAGE},
	{"MAX_PLAYERS", MAX_PLAYERS},
	{"MAX_VEHICLES", MAX_VEHICLES},
	{"MAX_ACTORS", MAX_ACTORS},
	{"INVALID_PLAYER_ID", INVALID_PLAYER_ID},
	{"INVALID_VEHICLE_ID", INVALID_VEHICLE_ID},
	{"INVALID_ACTOR_ID", INVALID_ACTOR_ID},
	{"NO_TEAM", NO_TEAM},
	{"MAX_OBJECTS", MAX_OBJECTS},
	{"INVALID_OBJECT_ID", INVALID_OBJECT_ID},
	{"MAX_GANG_ZONES", MAX_GANG_ZONES},
	{"MAX_TEXT_DRAWS", MAX_TEXT_DRAWS},
	{"MAX_PLAYER_TEXT_DRAWS", MAX_PLAYER_TEXT_DRAWS},
	{"MAX_MENUS", MAX_MENUS},
	{"MAX_3DTEXT_GLOBAL", MAX_3DTEXT_GLOBAL},
	{"MAX_3DTEXT_PLAYER", MAX_3DTEXT_PLAYER},
	{"MAX_PICKUPS", MAX_PICKUPS},
	{"INVALID_MENU", INVALID_MENU},
	{"INVALID_TEXT_DRAW", INVALID_TEXT_DRAW},
	{"INVALID_GANG_ZONE", INVALID_GANG_ZONE},
	{"INVALID_3DTEXT_ID", INVALID_3DTEXT_ID},
	{"SERVER_VARTYPE_NONE", SERVER_VARTYPE_NONE},
	{"SERVER_VARTYPE_INT", SERVER_VARTYPE_INT},
	{"SERVER_VARTYPE_STRING", SERVER_VARTYPE_STRING},
	{"SERVER_VARTYPE_FLOAT", SERVER_VARTYPE_FLOAT},
	{"TEXT_DRAW_FONT_SPRITE_DRAW", TEXT_DRAW_FONT_SPRITE_DRAW},
	{"TEXT_DRAW_FONT_MODEL_PREVIEW", TEXT_DRAW_FONT_MODEL_PREVIEW},
	{"DIALOG_STYLE_MSGBOX", DIALOG_STYLE_MSGBOX},
	{"DIALOG_STYLE_INPUT", DIALOG_STYLE_INPUT},
	{"DIALOG_STYLE_LIST", DIALOG_STYLE_LIST},
	{"DIALOG_STYLE_PASSWORD", DIALOG_STYLE_PASSWORD},
	{"DIALOG_STYLE_TABLIST", DIALOG_STYLE_TABLIST},
	{"DIALOG_STYLE_TABLIST_HEADERS", DIALOG_STYLE_TABLIST_HEADERS},
	{"PLAYER_STATE_NONE", PLAYER_STATE_NONE},
	{"PLAYER_STATE_ONFOOT", PLAYER_STATE_ONFOOT},
	{"PLAYER_STATE_DRIVER", PLAYER_STATE_DRIVER},
	{"PLAYER_STATE_PASSENGER", PLAYER_STATE_PASSENGER},
	{"PLAYER_STATE_EXIT_VEHICLE", PLAYER_STATE_EXIT_VEHICLE},
	{"PLAYER_STATE_ENTER_VEHICLE_DRIVER", PLAYER_STATE_ENTER_VEHICLE_DRIVER},
	{"PLAYER_STATE_ENTER_VEHICLE_PASSENGER", PLAYER_STATE_ENTER_VEHICLE_PASSENGER},
	{"PLAYER_STATE_WASTED", PLAYER_STATE_WASTED},
	{"PLAYER_STATE_SPAWNED", PLAYER_STATE_SPAWNED},
	{"PLAYER_STATE_SPECTATING", PLAYER_STATE_SPECTATING},
	{"PLAYER_MARKERS_MODE_OFF", PLAYER_MARKERS_MODE_OFF},
	{"PLAYER_MARKERS_MODE_GLOBAL", PLAYER_MARKERS_MODE_GLOBAL},
	{"PLAYER_MARKERS_MODE_STREAMED", PLAYER_MARKERS_MODE_STREAMED},
	{"WEAPON_BRASSKNUCKLE", WEAPON_BRASSKNUCKLE},
	{"WEAPON_GOLFCLUB", WEAPON_GOLFCLUB},
	{"WEAPON_NITESTICK", WEAPON_NITESTICK},
	{"WEAPON_KNIFE", WEAPON_KNIFE},
	{"WEAPON_BAT", WEAPON_BAT},
	{"WEAPON_SHOVEL", WEAPON_SHOVEL},
	{"WEAPON_POOLSTICK", WEAPON_POOLSTICK},
	{"WEAPON_KATANA", WEAPON_KATANA},
	{"WEAPON_CHAINSAW", WEAPON_CHAINSAW},
	{"WEAPON_DILDO", WEAPON_DILDO},
	{"WEAPON_DILDO2", WEAPON_DILDO2},
	{"WEAPON_VIBRATOR", WEAPON_VIBRATOR},
	{"WEAPON_VIBRATOR2", WEAPON_VIBRATOR2},
	{"WEAPON_FLOWER", WEAPON_FLOWER},
	{"WEAPON_CANE", WEAPON_CANE},
	{"WEAPON_GRENADE", WEAPON_GRENADE},
	{"WEAPON_TEARGAS", WEAPON_TEARGAS},
	{"WEAPON_MOLTOV", WEAPON_MOLTOV},
	{"WEAPON_COLT45", WEAPON_COLT45},
	{"WEAPON_SILENCED", WEAPON_SILENCED},
	{"WEAPON_DEAGLE", WEAPON_DEAGLE},
	{"WEAPON_SHOTGUN", WEAPON_SHOTGUN},
	{"WEAPON_SAWEDOFF", WEAPON_SAWEDOFF},
	{"WEAPON_SHOTGSPA", WEAPON_SHOTGSPA},
	{"WEAPON_UZI", WEAPON_UZI},
	{"WEAPON_MP5", WEAPON_MP5},
	{"WEAPON_AK47", WEAPON_AK47},
	{"WEAPON_M4", WEAPON_M4},
	{"WEAPON_TEC9", WEAPON_TEC9},
	{"WEAPON_RIFLE", WEAPON_RIFLE},
	{"WEAPON_SNIPER", WEAPON_SNIPER},
	{"WEAPON_ROCKETLAUNCHER", WEAPON_ROCKETLAUNCHER},
	{"WEAPON_HEATSEEKER", WEAPON_HEATSEEKER},
	{"WEAPON_FLAMETHROWER", WEAPON_FLAMETHROWER},
	{"WEAPON_MINIGUN", WEAPON_MINIGUN},
	{"WEAPON_SATCHEL", WEAPON_SATCHEL},
	{"WEAPON_BOMB", WEAPON_BOMB},
	{"WEAPON_SPRAYCAN", WEAPON_SPRAYCAN},
	{"WEAPON_FIREEXTINGUISHER", WEAPON_FIREEXTINGUISHER},
	{"WEAPON_CAMERA", WEAPON_CAMERA},
	{"WEAPON_NIGHTVISION", WEAPON_NIGHTVISION},
	{"WEAPON_INFRARED", WEAPON_INFRARED},
	{"WEAPON_PARACHUTE", WEAPON_PARACHUTE},
	{"WEAPON_VEHICLE", WEAPON_VEHICLE},
	{"WEAPON_DROWN", WEAPON_DROWN},
	{"WEAPON_COLLISION", WEAPON_COLLISION},
	{"KEY_ACTION", KEY_ACTION},
	{"KEY_CROUCH", KEY_CROUCH},
	{"KEY_FIRE", KEY_FIRE},
	{"KEY_SPRINT", KEY_SPRINT},
	{"KEY_SECONDARY_ATTACK", KEY_SECONDARY_ATTACK},
	{"KEY_JUMP", KEY_JUMP},
	{"KEY_LOOK_RIGHT", KEY_LOOK_RIGHT},
	{"KEY_HANDBRAKE", KEY_HANDBRAKE},
	{"KEY_LOOK_LEFT", KEY_LOOK_LEFT},
	{"KEY_SUBMISSION", KEY_SUBMISSION},
	{"KEY_LOOK_BEHIND", KEY_LOOK_BEHIND},
	{"KEY_WALK", KEY_WALK},
	{"KEY_ANALOG_UP", KEY_ANALOG_UP},
	{"KEY_ANALOG_DOWN", KEY_ANALOG_DOWN},
	{"KEY_ANALOG_LEFT", KEY_ANALOG_LEFT},
	{"KEY_ANALOG_RIGHT", KEY_ANALOG_RIGHT},
	{"KEY_YES", KEY_YES},
	{"KEY_NO", KEY_NO},
	{"KEY_CTRL_BACK", KEY_CTRL_BACK},
	{"KEY_UP", KEY_UP},
	{"KEY_DOWN", KEY_DOWN},
	{"KEY_LEFT", KEY_LEFT},
	{"KEY_RIGHT", KEY_RIGHT},
	{"BODY_PART_TORSO", BODY_PART_TORSO},
	{"BODY_PART_GROIN", BODY_PART_GROIN},
	{"BODY_PART_LEFT_ARM", BODY_PART_LEFT_ARM},
	{"BODY_PART_RIGHT_ARM", BODY_PART_RIGHT_ARM},
	{"BODY_PART_LEFT_LEG", BODY_PART_LEFT_LEG},
	{"BODY_PART_RIGHT_LEG", BODY_PART_RIGHT_LEG},
	{"BODY_PART_HEAD", BODY_PART_HEAD},
	{"CLICK_SOURCE_SCOREBOARD", CLICK_SOURCE_SCOREBOARD},
	{"EDIT_RESPONSE_CANCEL", EDIT_RESPONSE_CANCEL},
	{"EDIT_RESPONSE_FINAL", EDIT_RESPONSE_FINAL},
	{"EDIT_RESPONSE_UPDATE", EDIT_RESPONSE_UPDATE},
	{"SELECT_OBJECT_GLOBAL_OBJECT", SELECT_OBJECT_GLOBAL_OBJECT},
	{"SELECT_OBJECT_PLAYER_OBJECT", SELECT_OBJECT_PLAYER_OBJECT},
	{"BULLET_HIT_TYPE_NONE", BULLET_HIT_TYPE_NONE},
	{"BULLET_HIT_TYPE_PLAYER", BULLET_HIT_TYPE_PLAYER},
	{"BULLET_HIT_TYPE_VEHICLE", BULLET_HIT_TYPE_VEHICLE},
	{"BULLET_HIT_TYPE_OBJECT", BULLET_HIT_TYPE_OBJECT},
	{"BULLET_HIT_TYPE_PLAYER_OBJECT", BULLET_HIT_TYPE_PLAYER_OBJECT},
	{"CARMODTYPE_SPOILER", CARMODTYPE_SPOILER},
	{"CARMODTYPE_HOOD", CARMODTYPE_HOOD},
	{"CARMODTYPE_ROOF", CARMODTYPE_ROOF},
	{"CARMODTYPE_SIDESKIRT", CARMODTYPE_SIDESKIRT},
	{"CARMODTYPE_LAMPS", CARMODTYPE_LAMPS},
	{"CARMODTYPE_NITRO", CARMODTYPE_NITRO},
	{"CARMODTYPE_EXHAUST", CARMODTYPE_EXHAUST},
	{"CARMODTYPE_WHEELS", CARMODTYPE_WHEELS},
	{"CARMODTYPE_STEREO", CARMODTYPE_STEREO},
	{"CARMODTYPE_HYDRAULICS", CARMODTYPE_HYDRAULICS},
	{"CARMODTYPE_FRONT_BUMPER", CARMODTYPE_FRONT_BUMPER},
	{"CARMODTYPE_REAR_BUMPER", CARMODTYPE_REAR_BUMPER},
	{"CARMODTYPE_VENT_RIGHT", CARMODTYPE_VENT_RIGHT},
	{"CARMODTYPE_VENT_LEFT", CARMODTYPE_VENT_LEFT},
	{"VEHICLE_PARAMS_UNSET", VEHICLE_PARAMS_UNSET},
	{"VEHICLE_PARAMS_OFF", VEHICLE_PARAMS_OFF},
	{"VEHICLE_PARAMS_ON", VEHICLE_PARAMS_ON},
	{"VEHICLE_MODEL_INFO_SIZE", VEHICLE_MODEL_INFO_SIZE},
	{"VEHICLE_MODEL_INFO_FRONTSEAT", VEHICLE_MODEL_INFO_FRONTSEAT},
	{"VEHICLE_MODEL_INFO_REARSEAT", VEHICLE_MODEL_INFO_REARSEAT},
	{"VEHICLE_MODEL_INFO_PETROLCAP", VEHICLE_MODEL_INFO_PETROLCAP},
	{"VEHICLE_MODEL_INFO_WHEELSFRONT", VEHICLE_MODEL_INFO_WHEELSFRONT},
	{"VEHICLE_MODEL_INFO_WHEELSREAR", VEHICLE_MODEL_INFO_WHEELSREAR},
	{"VEHICLE_MODEL_INFO_WHEELSMID", VEHICLE_MODEL_INFO_WHEELSMID},
	{"VEHICLE_MODEL_INFO_FRONT_BUMPER_Z", VEHICLE_MODEL_INFO_FRONT_BUMPER_Z},
	{"VEHICLE_MODEL_INFO_REAR_BUMPER_Z", VEHICLE_MODEL_INFO_REAR_BUMPER_Z},
	{"OBJECT_MATERIAL_SIZE_32x32", OBJECT_MATERIAL_SIZE_32x32},
	{"OBJECT_MATERIAL_SIZE_64x32", OBJECT_MATERIAL_SIZE_64x32},
	{"OBJECT_MATERIAL_SIZE_64x64", OBJECT_MATERIAL_SIZE_64x64},
	{"OBJECT_MATERIAL_SIZE_128x32", OBJECT_MATERIAL_SIZE_128x32},
	{"OBJECT_MATERIAL_SIZE_128x64", OBJECT_MATERIAL_SIZE_128x64},
	{"OBJECT_MATERIAL_SIZE_128x128", OBJECT_MATERIAL_SIZE_128x128},
	{"OBJECT_MATERIAL_SIZE_256x32", OBJECT_MATERIAL_SIZE_256x32},
	{"OBJECT_MATERIAL_SIZE_256x64", OBJECT_MATERIAL_SIZE_256x64},
	{"OBJECT_MATERIAL_SIZE_256x128", OBJECT_MATERIAL_SIZE_256x128},
	{"OBJECT_MATERIAL_SIZE_256x256", OBJECT_MATERIAL_SIZE_256x256},
	{"OBJECT_MATERIAL_SIZE_512x64", OBJECT_MATERIAL_SIZE_512x64},
	{"OBJECT_MATERIAL_SIZE_512x128", OBJECT_MATERIAL_SIZE_512x128},
	{"OBJECT_MATERIAL_SIZE_512x256", OBJECT_MATERIAL_SIZE_512x256},
	{"OBJECT_MATERIAL_SIZE_512x512", OBJECT_MATERIAL_SIZE_512x512},
	{"OBJECT_MATERIAL_TEXT_ALIGN_LEFT", OBJECT_MATERIAL_TEXT_ALIGN_LEFT},
	{"OBJECT_MATERIAL_TEXT_ALIGN_CENTER", OBJECT_MATERIAL_TEXT_ALIGN_CENTER},
	{"OBJECT_MATERIAL_TEXT_ALIGN_RIGHT", OBJECT_MATERIAL_TEXT_ALIGN_RIGHT},
	{"SPECIAL_ACTION_NONE", SPECIAL_ACTION_NONE},
	{"SPECIAL_ACTION_DUCK", SPECIAL_ACTION_DUCK},
	{"SPECIAL_ACTION_USEJETPACK", SPECIAL_ACTION_USEJETPACK},
	{"SPECIAL_ACTION_ENTER_VEHICLE", SPECIAL_ACTION_ENTER_VEHICLE},
	{"SPECIAL_ACTION_EXIT_VEHICLE", SPECIAL_ACTION_EXIT_VEHICLE},
	{"SPECIAL_ACTION_DANCE1", SPECIAL_ACTION_DANCE1},
	{"SPECIAL_ACTION_DANCE2", SPECIAL_ACTION_DANCE2},
	{"SPECIAL_ACTION_DANCE3", SPECIAL_ACTION_DANCE3},
	{"SPECIAL_ACTION_DANCE4", SPECIAL_ACTION_DANCE4},
	{"SPECIAL_ACTION_HANDSUP", SPECIAL_ACTION_HANDSUP},
	{"SPECIAL_ACTION_USECELLPHONE", SPECIAL_ACTION_USECELLPHONE},
	{"SPECIAL_ACTION_SITTING", SPECIAL_ACTION_SITTING},
	{"SPECIAL_ACTION_STOPUSECELLPHONE", SPECIAL_ACTION_STOPUSECELLPHONE},
	{"SPECIAL_ACTION_DRINK_BEER", SPECIAL_ACTION_DRINK_BEER},
	{"SPECIAL_ACTION_SMOKE_CIGGY", SPECIAL_ACTION_SMOKE_CIGGY},
	{"SPECIAL_ACTION_DRINK_WINE", SPECIAL_ACTION_DRINK_WINE},
	{"SPECIAL_ACTION_DRINK_SPRUNK", SPECIAL_ACTION_DRINK_SPRUNK},
	{"SPECIAL_ACTION_CUFFED", SPECIAL_ACTION_CUFFED},
	{"SPECIAL_ACTION_CARRY", SPECIAL_ACTION_CARRY},
	{"FIGHT_STYLE_NORMAL", FIGHT_STYLE_NORMAL},
	{"FIGHT_STYLE_BOXING", FIGHT_STYLE_BOXING},
	{"FIGHT_STYLE_KUNGFU", FIGHT_STYLE_KUNGFU},
	{"FIGHT_STYLE_KNEEHEAD", FIGHT_STYLE_KNEEHEAD},
	{"FIGHT_STYLE_GRABKICK", FIGHT_STYLE_GRABKICK},
	{"FIGHT_STYLE_ELBOW", FIGHT_STYLE_ELBOW},
	{"WEAPONSKILL_PISTOL", WEAPONSKILL_PISTOL},
	{"WEAPONSKILL_PISTOL_SILENCED", WEAPONSKILL_PISTOL_SILENCED},
	{"WEAPONSKILL_DESERT_EAGLE", WEAPONSKILL_DESERT_EAGLE},
	{"WEAPONSKILL_SHOTGUN", WEAPONSKILL_SHOTGUN},
	{"WEAPONSKILL_SAWNOFF_SHOTGUN", WEAPONSKILL_SAWNOFF_SHOTGUN},
	{"WEAPONSKILL_SPAS12_SHOTGUN", WEAPONSKILL_SPAS12_SHOTGUN},
	{"WEAPONSKILL_MICRO_UZI", WEAPONSKILL_MICRO_UZI},
	{"WEAPONSKILL_MP5", WEAPONSKILL_MP5},
	{"WEAPONSKILL_AK47", WEAPONSKILL_AK47},
	{"WEAPONSKILL_M4", WEAPONSKILL_M4},
	{"WEAPONSKILL_SNIPERRIFLE", WEAPONSKILL_SNIPERRIFLE},
	{"WEAPONSTATE_UNKNOWN", WEAPONSTATE_UNKNOWN},
	{"WEAPONSTATE_NO_BULLETS", WEAPONSTATE_NO_BULLETS},
	{"WEAPONSTATE_LAST_BULLET", WEAPONSTATE_LAST_BULLET},
	{"WEAPONSTATE_MORE_BULLETS", WEAPONSTATE_MORE_BULLETS},
	{"WEAPONSTATE_RELOADING", WEAPONSTATE_RELOADING},
	{"MAX_PLAYER_ATTACHED_OBJECTS", MAX_PLAYER_ATTACHED_OBJECTS},
	{"PLAYER_VARTYPE_NONE", PLAYER_VARTYPE_NONE},
	{"PLAYER_VARTYPE_INT", PLAYER_VARTYPE_INT},
	{"PLAYER_VARTYPE_STRING", PLAYER_VARTYPE_STRING},
	{"PLAYER_VARTYPE_FLOAT", PLAYER_VARTYPE_FLOAT},
	{"MAX_CHATBUBBLE_LENGTH", MAX_CHATBUBBLE_LENGTH},
	{"MAPICON_LOCAL", MAPICON_LOCAL},
	{"MAPICON_GLOBAL", MAPICON_GLOBAL},
	{"MAPICON_LOCAL_CHECKPOINT", MAPICON_LOCAL_CHECKPOINT},
	{"MAPICON_GLOBAL_CHECKPOINT", MAPICON_GLOBAL_CHECKPOINT},
	{"CAMERA_CUT", CAMERA_CUT},
	{"CAMERA_MOVE", CAMERA_MOVE},
	{"SPECTATE_MODE_NORMAL", SPECTATE_MODE_NORMAL},
	{"SPECTATE_MODE_FIXED", SPECTATE_MODE_FIXED},
	{"SPECTATE_MODE_SIDE", SPECTATE_MODE_SIDE},
	{"PLAYER_RECORDING_TYPE_NONE", PLAYER_RECORDING_TYPE_NONE},
	{"PLAYER_RECORDING_TYPE_DRIVER", PLAYER_RECORDING_TYPE_DRIVER},
	{"PLAYER_RECORDING_TYPE_ONFOOT", PLAYER_RECORDING_TYPE_ONFOOT}
};
